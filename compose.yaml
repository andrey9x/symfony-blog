services:
  nginx:
    image: nginx:stable-alpine
    restart: always
    # container_name: nginx-container
    ports:
      - "8082:80"
    volumes:
      - ./:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    restart: always
    # container_name: php81-container
#    ports:
#      - "9000:9000"
    volumes:
      - ./:/app
###> doctrine/doctrine-bundle ###
  database:
    image: mysql:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      TZ: Europe/Moscow
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "33068:3306"
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
#  database:
#    image: postgres:${POSTGRES_VERSION:-16}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
